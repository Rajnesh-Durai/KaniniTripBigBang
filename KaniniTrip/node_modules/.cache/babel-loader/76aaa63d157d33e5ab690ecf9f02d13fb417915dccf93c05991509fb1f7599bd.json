{"ast":null,"code":"var _jsxFileName = \"D:\\\\KaniniTrip\\\\src\\\\Component\\\\ImageGallery\\\\ImageGallery.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageGallery = () => {\n  _s();\n  const [carouselData, setCarouselData] = useState([]);\n  useEffect(() => {\n    // Fetch carousel data using axios and update the state\n    const fetchCarouselData = async () => {\n      try {\n        const response = await axios.get('https://localhost:7026/UserSide/GetDashboardImage');\n        console.log(response.data);\n        setCarouselData(response.data); // Assuming the API response contains the data for carousel items\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchCarouselData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"ImageGallery\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), carouselData.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: `data:image/jpeg;base64,${item.imageName}`,\n        alt: `Image ${index + 1}`,\n        style: {\n          width: '100%',\n          height: 'auto'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: item.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: item.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageGallery, \"UmQEXET0sVAsfQHPKSXtQ73OaPM=\");\n_c = ImageGallery;\nexport default ImageGallery;\nvar _c;\n$RefreshReg$(_c, \"ImageGallery\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ImageGallery","_s","carouselData","setCarouselData","fetchCarouselData","response","get","console","log","data","error","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","src","imageName","alt","style","width","height","name","description","_c","$RefreshReg$"],"sources":["D:/KaniniTrip/src/Component/ImageGallery/ImageGallery.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nconst ImageGallery = () => {\r\n     \r\n  const [carouselData, setCarouselData] = useState([]);\r\n  useEffect(() => {\r\n    // Fetch carousel data using axios and update the state\r\n    const fetchCarouselData = async () => {\r\n      try {\r\n        const response = await axios.get('https://localhost:7026/UserSide/GetDashboardImage');\r\n        console.log(response.data);\r\n        setCarouselData(response.data); // Assuming the API response contains the data for carousel items\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchCarouselData();\r\n  }, []);\r\n  return (\r\n    <div>\r\n        <div>\r\n            \r\n        </div>\r\n        <div>ImageGallery</div>\r\n      {carouselData.map((item, index) => (\r\n        <div key={index}>\r\n          <img src={`data:image/jpeg;base64,${item.imageName}`} alt={`Image ${index + 1}`} style={{ width: '100%', height: 'auto' }} />\r\n          <h2>{item.name}</h2>\r\n          <p>{item.description}</p>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ImageGallery\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1B,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEzB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpDC,SAAS,CAAC,MAAM;IACd;IACA,MAAMQ,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MACpC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,mDAAmD,CAAC;QACrFC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,CAAC;QAC1BN,eAAe,CAACE,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAC;MAClC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IAEDN,iBAAiB,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EACN,oBACEL,OAAA;IAAAY,QAAA,gBACIZ,OAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEK,CAAC,eACNhB,OAAA;MAAAY,QAAA,EAAK;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACxBb,YAAY,CAACc,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC5BnB,OAAA;MAAAY,QAAA,gBACEZ,OAAA;QAAKoB,GAAG,EAAG,0BAAyBF,IAAI,CAACG,SAAU,EAAE;QAACC,GAAG,EAAG,SAAQH,KAAK,GAAG,CAAE,EAAE;QAACI,KAAK,EAAE;UAAEC,KAAK,EAAE,MAAM;UAAEC,MAAM,EAAE;QAAO;MAAE;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC7HhB,OAAA;QAAAY,QAAA,EAAKM,IAAI,CAACQ;MAAI;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACpBhB,OAAA;QAAAY,QAAA,EAAIM,IAAI,CAACS;MAAW;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,GAHjBG,KAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIV,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAAd,EAAA,CAhCKD,YAAY;AAAA2B,EAAA,GAAZ3B,YAAY;AAkClB,eAAeA,YAAY;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}