{"ast":null,"code":"var _jsxFileName = \"D:\\\\KaniniTripBigBang\\\\KaniniTrip\\\\src\\\\Component\\\\Chatbot\\\\Chatbot.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Kanini from '../../Assets/logo.png';\nimport './Chatbot.css';\nimport ChatMessage from './ChatMessage';\nimport { analyze } from './Utility';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [message, setMessage] = useState([{\n    message: 'Hi, May I have your name?'\n  }]);\n  const [text, setText] = useState('');\n  const [initialResponsesDisplayed, setInitialResponsesDisplayed] = useState(false);\n  const onSend = () => {\n    let list = [...message, {\n      message: text,\n      user: true\n    }];\n    if (!initialResponsesDisplayed) {\n      // Display the initial responses first\n      list = [...list, {\n        message: `Hi, ${text}`\n      }, {\n        message: `Hi, Which State you are looking for your Trip??`\n      }];\n      setInitialResponsesDisplayed(true);\n    } else {\n      // Handle user queries after initial responses are displayed\n      const reply = analyze(text);\n      list = [...list, {\n        message: reply\n      }];\n    }\n    setMessage(list);\n    setText('');\n    // Check if the element exists before scrolling\n    const copyrightElement = document.querySelector('#copyright');\n    if (copyrightElement) {\n      setTimeout(() => {\n        copyrightElement.scrollIntoView();\n      }, 500);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"align\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: Kanini,\n        className: \"kanini\",\n        alt: \"Kanini\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-message\",\n      children: [message.length > 0 && message.map((data, index) => /*#__PURE__*/_jsxDEV(ChatMessage, {\n        ...data\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 61\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"send-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"search\",\n          className: \"search\",\n          value: text,\n          onChange: e => setText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"send\",\n          onClick: onSend,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"oyRVooLzemQE4C4ReJzmSvG+21Q=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","Kanini","ChatMessage","analyze","jsxDEV","_jsxDEV","Chatbot","_s","message","setMessage","text","setText","initialResponsesDisplayed","setInitialResponsesDisplayed","onSend","list","user","reply","copyrightElement","document","querySelector","setTimeout","scrollIntoView","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","length","map","data","index","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["D:/KaniniTripBigBang/KaniniTrip/src/Component/Chatbot/Chatbot.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Kanini from '../../Assets/logo.png';\r\nimport './Chatbot.css';\r\nimport ChatMessage from './ChatMessage';\r\nimport { analyze } from './Utility';\r\n\r\nconst Chatbot = () => {\r\n  const [message, setMessage] = useState([\r\n    {\r\n      message: 'Hi, May I have your name?',\r\n    },\r\n  ]);\r\n\r\n  const [text, setText] = useState('');\r\n  const [initialResponsesDisplayed, setInitialResponsesDisplayed] = useState(false);\r\n\r\n  const onSend = () => {\r\n    let list = [...message, { message: text, user: true }];\r\n    if (!initialResponsesDisplayed) {\r\n      // Display the initial responses first\r\n      list = [\r\n        ...list,\r\n        {\r\n          message: `Hi, ${text}`,\r\n        },\r\n        {\r\n          message: `Hi, Which State you are looking for your Trip??`,\r\n        },\r\n      ];\r\n      setInitialResponsesDisplayed(true);\r\n    } else {\r\n      // Handle user queries after initial responses are displayed\r\n      const reply = analyze(text);\r\n      list = [...list, { message: reply }];\r\n    }\r\n\r\n    setMessage(list);\r\n    setText('');\r\n  // Check if the element exists before scrolling\r\n  const copyrightElement = document.querySelector('#copyright');\r\n  if (copyrightElement) {\r\n    setTimeout(() => {\r\n      copyrightElement.scrollIntoView();\r\n    },500);\r\n  }\r\n};\r\n\r\n  return (\r\n    <div className='chat'>\r\n      <div className='align'>\r\n        <img src={Kanini} className='kanini' alt='Kanini' />\r\n      </div>\r\n      <div className='chat-message'>\r\n        {message.length > 0 && message.map((data, index) => <ChatMessage key={index} {...data} />)}\r\n        <div className='send-container'>\r\n          <input type='search' className='search' value={text} onChange={(e) => setText(e.target.value)} />\r\n          <button className='send' onClick={onSend}>\r\n            Send\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,uBAAuB;AAC1C,OAAO,eAAe;AACtB,OAAOC,WAAW,MAAM,eAAe;AACvC,SAASC,OAAO,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,CACrC;IACEQ,OAAO,EAAE;EACX,CAAC,CACF,CAAC;EAEF,MAAM,CAACE,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACY,yBAAyB,EAAEC,4BAA4B,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAEjF,MAAMc,MAAM,GAAGA,CAAA,KAAM;IACnB,IAAIC,IAAI,GAAG,CAAC,GAAGP,OAAO,EAAE;MAAEA,OAAO,EAAEE,IAAI;MAAEM,IAAI,EAAE;IAAK,CAAC,CAAC;IACtD,IAAI,CAACJ,yBAAyB,EAAE;MAC9B;MACAG,IAAI,GAAG,CACL,GAAGA,IAAI,EACP;QACEP,OAAO,EAAG,OAAME,IAAK;MACvB,CAAC,EACD;QACEF,OAAO,EAAG;MACZ,CAAC,CACF;MACDK,4BAA4B,CAAC,IAAI,CAAC;IACpC,CAAC,MAAM;MACL;MACA,MAAMI,KAAK,GAAGd,OAAO,CAACO,IAAI,CAAC;MAC3BK,IAAI,GAAG,CAAC,GAAGA,IAAI,EAAE;QAAEP,OAAO,EAAES;MAAM,CAAC,CAAC;IACtC;IAEAR,UAAU,CAACM,IAAI,CAAC;IAChBJ,OAAO,CAAC,EAAE,CAAC;IACb;IACA,MAAMO,gBAAgB,GAAGC,QAAQ,CAACC,aAAa,CAAC,YAAY,CAAC;IAC7D,IAAIF,gBAAgB,EAAE;MACpBG,UAAU,CAAC,MAAM;QACfH,gBAAgB,CAACI,cAAc,CAAC,CAAC;MACnC,CAAC,EAAC,GAAG,CAAC;IACR;EACF,CAAC;EAEC,oBACEjB,OAAA;IAAKkB,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBnB,OAAA;MAAKkB,SAAS,EAAC,OAAO;MAAAC,QAAA,eACpBnB,OAAA;QAAKoB,GAAG,EAAExB,MAAO;QAACsB,SAAS,EAAC,QAAQ;QAACG,GAAG,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CAAC,eACNzB,OAAA;MAAKkB,SAAS,EAAC,cAAc;MAAAC,QAAA,GAC1BhB,OAAO,CAACuB,MAAM,GAAG,CAAC,IAAIvB,OAAO,CAACwB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAAK7B,OAAA,CAACH,WAAW;QAAA,GAAiB+B;MAAI,GAAfC,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC,CAAC,eAC1FzB,OAAA;QAAKkB,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC7BnB,OAAA;UAAO8B,IAAI,EAAC,QAAQ;UAACZ,SAAS,EAAC,QAAQ;UAACa,KAAK,EAAE1B,IAAK;UAAC2B,QAAQ,EAAGC,CAAC,IAAK3B,OAAO,CAAC2B,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACjGzB,OAAA;UAAQkB,SAAS,EAAC,MAAM;UAACiB,OAAO,EAAE1B,MAAO;UAAAU,QAAA,EAAC;QAE1C;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACvB,EAAA,CAzDID,OAAO;AAAAmC,EAAA,GAAPnC,OAAO;AA2Db,eAAeA,OAAO;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}