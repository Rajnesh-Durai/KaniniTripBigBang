{"ast":null,"code":"var _jsxFileName = \"D:\\\\KaniniTrip\\\\src\\\\Component\\\\HomePage\\\\MapComponent\\\\MapComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { ComposableMap, Geographies, Geography, Marker, Annotation } from \"react-simple-maps\";\nimport \"./MapComponent.css\";\nimport { MDBIcon } from 'mdb-react-ui-kit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Section = styled.div`\nheight:100vh;\ndisplay: flex;\nalign-items: center;\njustify-content: center;\nscroll-snap-align:center;\nbackground-color:#fff;\n`;\n_c = Section;\nconst MapContainer = styled.div`\n\n  height: 50px;\n  width:50px;\n`;\n_c2 = MapContainer;\nconst MapComponent = () => {\n  _s();\n  const [showPopup, setShowPopup] = useState(false);\n  const locations = [{\n    name: \"Kerala\",\n    coordinates: [76.2711, 10.8505],\n    markerOffset: -15\n  }, {\n    name: \"Goa\",\n    coordinates: [74.124, 15.2993],\n    markerOffset: -15\n  }, {\n    name: \"Delhi\",\n    coordinates: [77.2090, 28.6139],\n    markerOffset: 25\n  }, {\n    name: \"Kolkata\",\n    coordinates: [88.3639, 22.5726],\n    markerOffset: 25\n  }\n  // Add more locations here\n  ];\n\n  return /*#__PURE__*/_jsxDEV(Section, {\n    className: \"sectmap\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map\",\n      id: \"map-section\",\n      children: /*#__PURE__*/_jsxDEV(MapContainer, {\n        children: /*#__PURE__*/_jsxDEV(ComposableMap, {\n          projection: \"geoMercator\",\n          projectionConfig: {\n            scale: 400,\n            center: [82, 22] // Adjust center coordinates to focus on India\n          },\n\n          style: {\n            height: '600px',\n            width\n          },\n          children: [/*#__PURE__*/_jsxDEV(Geographies, {\n            geography: \"india.json\",\n            children: ({\n              geographies\n            }) => geographies.map(geo => /*#__PURE__*/_jsxDEV(Geography, {\n              geography: geo,\n              fill: \"#afe0f4\",\n              stroke: \"black\"\n            }, geo.rsmKey, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 11\n          }, this), locations.map((location, index) => /*#__PURE__*/_jsxDEV(Marker, {\n            coordinates: location.coordinates,\n            children: [/*#__PURE__*/_jsxDEV(\"g\", {\n              fill: \"blue\",\n              stroke: \"#ff5533\",\n              strokeWidth: \"2\",\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              transform: \"translate(-12, 0)\",\n              fontSize: \"10\" // Adjust font size\n              ,\n              color: \"blue\" // Change color\n              ,\n              outline: \"none\",\n              className: \"marker\",\n              children: /*#__PURE__*/_jsxDEV(MDBIcon, {\n                fas: true,\n                icon: \"map-marker-alt\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 18\n            }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n              textAnchor: \"middle\",\n              y: location.markerOffset,\n              style: {\n                fontFamily: 'Manrope',\n                fill: 'black',\n                fontSize: '10px'\n              },\n              children: location.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(MapComponent, \"YxEq4CBtuWdF8IGTVx1DJqim++A=\");\n_c3 = MapComponent;\nexport default MapComponent;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Section\");\n$RefreshReg$(_c2, \"MapContainer\");\n$RefreshReg$(_c3, \"MapComponent\");","map":{"version":3,"names":["React","useEffect","useState","styled","ComposableMap","Geographies","Geography","Marker","Annotation","MDBIcon","jsxDEV","_jsxDEV","Section","div","_c","MapContainer","_c2","MapComponent","_s","showPopup","setShowPopup","locations","name","coordinates","markerOffset","className","children","id","projection","projectionConfig","scale","center","style","height","width","geography","geographies","map","geo","fill","stroke","rsmKey","fileName","_jsxFileName","lineNumber","columnNumber","location","index","strokeWidth","strokeLinecap","strokeLinejoin","transform","fontSize","color","outline","fas","icon","textAnchor","y","fontFamily","_c3","$RefreshReg$"],"sources":["D:/KaniniTrip/src/Component/HomePage/MapComponent/MapComponent.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport styled from 'styled-components';\r\nimport { ComposableMap, Geographies, Geography, Marker, Annotation } from \"react-simple-maps\";\r\nimport \"./MapComponent.css\";\r\nimport { MDBIcon } from 'mdb-react-ui-kit';\r\n\r\nconst Section = styled.div`\r\nheight:100vh;\r\ndisplay: flex;\r\nalign-items: center;\r\njustify-content: center;\r\nscroll-snap-align:center;\r\nbackground-color:#fff;\r\n`;\r\n\r\nconst MapContainer = styled.div`\r\n\r\n  height: 50px;\r\n  width:50px;\r\n`;\r\n\r\n\r\n\r\n\r\nconst MapComponent = () => {\r\n  const [showPopup, setShowPopup] = useState(false);\r\n  const locations = [\r\n    {\r\n      name: \"Kerala\",\r\n      coordinates: [76.2711, 10.8505],\r\n      markerOffset: -15,\r\n    },\r\n    {\r\n      name: \"Goa\",\r\n      coordinates: [74.124, 15.2993],\r\n      markerOffset: -15,\r\n    },\r\n    {\r\n      name: \"Delhi\",\r\n      coordinates: [77.2090, 28.6139],\r\n      markerOffset: 25,\r\n    },\r\n    {\r\n      name: \"Kolkata\",\r\n      coordinates: [88.3639, 22.5726],\r\n      markerOffset: 25,\r\n    },\r\n    // Add more locations here\r\n  ];\r\n\r\n\r\n  return (\r\n    <Section  className='sectmap'>\r\n      <div className=\"map\" id=\"map-section\" >\r\n      <MapContainer>\r\n      <ComposableMap\r\n          projection=\"geoMercator\"\r\n          projectionConfig={{\r\n            scale: 400,\r\n            center: [82, 22], // Adjust center coordinates to focus on India\r\n          }}\r\n          style={{ height: '600px',width }}\r\n        >\r\n          <Geographies geography=\"india.json\">\r\n            {({ geographies }) =>\r\n              geographies.map((geo) => (\r\n                <Geography key={geo.rsmKey} geography={geo} fill=\"#afe0f4\" stroke=\"black\" />\r\n              ))\r\n            }\r\n          </Geographies>\r\n          {locations.map((location, index) => (\r\n            <Marker key={index} coordinates={location.coordinates}>\r\n                 <g\r\n                fill=\"blue\"\r\n                stroke=\"#ff5533\"\r\n                strokeWidth=\"2\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                transform=\"translate(-12, 0)\"\r\n                fontSize=\"10\" // Adjust font size\r\n                color=\"blue\" // Change color\r\n                outline=\"none\"\r\n                className='marker'\r\n              >\r\n                {/* <PlaceIcon/> */}\r\n                <MDBIcon fas icon=\"map-marker-alt\" />\r\n                {/* <circle cx=\"12\" cy=\"10\" r=\"3\" /> */}\r\n                {/* <path d=\"M12 2C6.48 2 2 6.48 2 12a9.957 9.957 0 0 0 7.2 9.54c.65.133 1.04-.283 1.24-.54.2-.267.05-.64-.233-.89-.65-.52-1.04-1.25-1.04-2.1 0-1.54 1.11-2.79 2.5-2.79 1.65 0 2.5 1.54 2.5 2.79 0 .85-.39 1.58-1.03 2.1-.28.25-.44.62-.24.91.2.27.62.66 1.22.54A9.957 9.957 0 0 0 22 12c0-5.52-4.48-10-10-10z\" /> */}\r\n              </g>\r\n              <text\r\n                textAnchor=\"middle\"\r\n                y={location.markerOffset}\r\n                style={{ fontFamily: 'Manrope', fill: 'black', fontSize: '10px' }}\r\n              >\r\n                {location.name}\r\n              </text>\r\n            </Marker>\r\n          ))}\r\n        </ComposableMap>\r\n        {/* <p className='service'>Services we are into: </p> */}\r\n        </MapContainer>\r\n      </div>\r\n    </Section>\r\n  )\r\n}\r\n\r\nexport default MapComponent\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}