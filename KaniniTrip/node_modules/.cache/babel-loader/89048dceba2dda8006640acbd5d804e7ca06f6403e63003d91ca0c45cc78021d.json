{"ast":null,"code":"var _jsxFileName = \"D:\\\\KaniniTrip\\\\src\\\\Component\\\\AgentBooking\\\\AgentBooking.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport gallery from '../../Assets/low-angle-shot-mesmerizing-starry-sky.jpg';\nimport { MDBInput } from 'mdb-react-ui-kit';\nimport axios from 'axios';\nimport './AgentBooking.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AgentBooking = () => {\n  _s();\n  const [location, setLocation] = useState([]);\n  const [selectedValue, setSelectedValue] = useState('');\n  const [iselectedValue, setISelectedValue] = useState('');\n  const [iselectedValue2, setISelectedValue2] = useState([]);\n  const [numDays, setNumDays] = useState(1); // Initialize with 1 day\n  const [spot, setSpot] = useState([]);\n  const [hotel, setHotel] = useState([]);\n  const [selectedSpots, setSelectedSpots] = useState(Array.from({\n    length: numDays\n  }, () => ''));\n  const [selectedHotels, setSelectedHotels] = useState(Array.from({\n    length: numDays\n  }, () => ''));\n  const [selectedHotel, setSelectedHotel] = useState('');\n  const [selectedPack, setSelectedPack] = useState({\n    locationId: 1,\n    packageName: '',\n    ImageName: null,\n    iternary: '',\n    pricePerPerson: '',\n    numberOfDays: '',\n    personLimit: true\n  });\n  const [dayschedule, setDaySchedule] = useState({\n    packageId: 0,\n    daywise: 0,\n    hotelName: '',\n    spotName: '',\n    vehicleName: ''\n  });\n  const [isOpen, setIsOpen] = useState(false);\n  useEffect(() => {\n    const fetchCarouselData = async () => {\n      try {\n        const response = await axios.get('https://localhost:7026/UserSide/DisplayingAllLocations');\n        console.log(response.data);\n        setLocation(response.data); // Assuming the API response contains the data for carousel items\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchCarouselData();\n  }, []);\n  const handleChange = event => {\n    console.log(event.target.value);\n    setISelectedValue(event.target.value);\n    fetchLocationName(event.target.value);\n  };\n  // const handleChange2 = (event) => {\n  //     console.log(event.target.value);\n  //     setISelectedValue2(event.target.value)\n  //     fetchHotelName(event.target.value);\n  // };\n  const [getSpot, setSpotselect] = useState('');\n  const handleChange2 = async (event, dayIndex) => {\n    const spotName = event.target.value;\n    // setSelectedSpots((prevSpots) => {\n    //     const newSpots = [...prevSpots];\n    //     newSpots[dayIndex] = spotName;\n    //     return newSpots;\n    // });\n    // setDaySchedule((prevSchedule) => {\n    //     const updatedSchedule = [...prevSchedule];\n    //     updatedSchedule[dayIndex].spotName = spotName;\n    //     return updatedSchedule;\n    //   });\n    setSpotselect(prevHotel => [...prevHotel, ...event.target.value]);\n    fetchHotelName(spotName, dayIndex); // Pass the dayIndex to identify the selected day\n  };\n\n  const [hotels, setHotels] = useState('');\n  const handleHotelChange = (event, dayIndex) => {\n    const hotelName = event.target.value;\n    setSelectedHotels(prevHotels => {\n      const newHotels = [...prevHotels];\n      newHotels[dayIndex] = hotelName;\n      return newHotels;\n    });\n    setHotels();\n  };\n  const [getvehicle, setVehicle] = useState('');\n  const handleVehicleNameChange = (event, dayIndex) => {\n    const vehicleName = event.target.value;\n    // setDaySchedule((prevSchedule) => {\n    //   const updatedSchedule = [...prevSchedule];\n    //   updatedSchedule[dayIndex].vehicleName = vehicleName;\n    //   return updatedSchedule;\n    // });\n    setVehicle(prevHotel => [...prevHotel, ...event.target.value]);\n  };\n  useEffect(() => {\n    setSelectedHotel(''); // Reset selected hotel whenever the selected spot changes\n  }, [selectedSpots]);\n  const fetchLocationName = async placeName => {\n    // GetSpots in that Locations\n    try {\n      const uncheckedDeptName = location.find(dept => dept.locationName === placeName).locationId;\n      console.log(uncheckedDeptName);\n      const response = await axios.get(`https://localhost:7026/AgentSide/GetSpotNameById?locationId=${uncheckedDeptName}`);\n      console.log(response.data);\n      setSpot(response.data); // Assuming the API response contains the data for carousel items\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const fetchHotelName = async (spotName, dayIndex) => {\n    try {\n      const uncheckedDeptName = spot.find(dept => dept.spotName === spotName).id;\n      console.log(uncheckedDeptName);\n      const response = await axios.get(`https://localhost:7026/AgentSide/GetHotelNameBySpotId?locationId=${uncheckedDeptName}`);\n      console.log(response.data);\n      // Get the array of hotels for the selected spot\n      const hotelsForSpot = response.data.map(item => item.hotelName);\n      setSelectedHotels(prevHotels => {\n        const newHotels = [...prevHotels];\n        newHotels[dayIndex] = hotelsForSpot[0] || ''; // Set the selected hotel for the specific day to the first hotel for the spot\n        return newHotels;\n      });\n      // Update the hotel state with the fetched hotels\n      setHotel(prevHotel => [...prevHotel, ...response.data]);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const PostPackage = () => {\n    // Do something with the selectedPack data, e.g., send it to the server\n    console.log(selectedPack);\n    axios.post('https://localhost:7026/UserSide/BookingAPackage', selectedPack).then(response => {\n      // Handle successful response from the server\n      console.log('Data successfully sent to the server:', response.data);\n    }).catch(error => {\n      // Handle error\n      console.error('Error while sending data to the server:', error);\n    });\n    setIsOpen(true);\n  };\n  const handlePost = async () => {\n    try {\n      const postData = {};\n      // Create an array to hold the POST data for each day\n      // const postData = [];\n      // for (let i = 0; i < numDays; i++) {\n      //     const {  spotName } = dayschedule[i];\n      try {\n        const response = await axios.get(`https://localhost:7026/UserSide/DisplayingAllLocations`);\n        console.log(response.data.length); // Assuming the API response contains the data for carousel items\n\n        // Add the data for each day to the postData array\n\n        postData.push({\n          packageId: response.data.length,\n          daywise: 1,\n          // Set the daywise value (daywise = i + 1)\n          hotelName: hotel,\n          spotName: getSpot,\n          vehicleName: getvehicle\n        });\n      } catch (error) {\n        console.error(error);\n      }\n      console.log(postData);\n\n      // Send the POST request with the postData array\n      const response = await axios.post('https://localhost:7026/AgentSide/GetHotelNameBySpotId', postData).then(response => {\n        // Handle successful response from the server\n        console.log('Data successfully sent to the server:', response.data);\n      }).catch(error => {\n        // Handle error\n        console.error('Error while sending data to the server:', error);\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // const [numDays, setNumDays] = useState(1); // Initialize with 1 day\n\n  const handleNumDaysChange = event => {\n    setNumDays(parseInt(event.target.value, 10));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: gallery,\n        className: \"gallery-img\",\n        alt: \"Gallery\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"book-head\",\n      children: \"ADD PACKAGE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mt-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"booknow-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"mt-3 text-center\",\n          children: \"ADDING PACKAGE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"increase-width mt-5 mb-3\",\n          value: iselectedValue,\n          onChange: handleChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 25\n          }, this), location.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: item.locationName,\n            children: item.locationName\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(MDBInput, {\n            className: \"mb-3\",\n            label: \"Package Name\",\n            id: \"typeText\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(MDBInput, {\n            className: \"mb-3\",\n            label: \"\",\n            id: \"typeText\",\n            type: \"file\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(MDBInput, {\n            className: \"mb-3\",\n            label: \"Iternary\",\n            id: \"typeText\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(MDBInput, {\n            className: \"mb-3\",\n            label: \"Number of Days\",\n            value: numDays,\n            min: \"1\",\n            onChange: handleNumDaysChange,\n            id: \"typeText\",\n            type: \"number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(MDBInput, {\n            className: \"mb-3\",\n            label: \"Price Per Person\",\n            id: \"typeText\",\n            type: \"number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(MDBInput, {\n            className: \"mb-3\",\n            label: \"Person Limit\",\n            id: \"typeText\",\n            type: \"number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary mt-3 upload-cancel\",\n          onClick: PostPackage,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mt-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"booknow-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"mt-3 text-center\",\n          children: \"ADDING DAY SCHEDULES\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 25\n        }, this), Array.from({\n          length: numDays\n        }).map((_, dayIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"mt-5 mb-3\",\n            children: [\"Day: \", dayIndex + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"increase-width mb-3\",\n            value: selectedSpots[dayIndex],\n            onChange: event => handleChange2(event, dayIndex),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select a Spot Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 37\n            }, this), spot.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: item.spotName,\n              children: item.spotName\n            }, item.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 41\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"increase-width mb-3\",\n              value: selectedHotels[dayIndex],\n              onChange: event => handleHotelChange(event, dayIndex),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select a Hotel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 41\n              }, this), hotel.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: item.hotelName,\n                children: item.hotelName\n              }, item.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 45\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(MDBInput, {\n              className: \"mb-3\",\n              label: \"Vehicle to Provide\",\n              id: \"typeText\",\n              type: \"text\",\n              onChange: event => handleVehicleNameChange(event, dayIndex)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 33\n          }, this)]\n        }, dayIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 29\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary mt-3 upload-cancel\",\n          onClick: handlePost,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 9\n  }, this);\n};\n_s(AgentBooking, \"BT2qskOd2fQ92a651Y9hQ/JnfP8=\");\n_c = AgentBooking;\nexport default AgentBooking;\nvar _c;\n$RefreshReg$(_c, \"AgentBooking\");","map":{"version":3,"names":["React","useState","useEffect","gallery","MDBInput","axios","jsxDEV","_jsxDEV","AgentBooking","_s","location","setLocation","selectedValue","setSelectedValue","iselectedValue","setISelectedValue","iselectedValue2","setISelectedValue2","numDays","setNumDays","spot","setSpot","hotel","setHotel","selectedSpots","setSelectedSpots","Array","from","length","selectedHotels","setSelectedHotels","selectedHotel","setSelectedHotel","selectedPack","setSelectedPack","locationId","packageName","ImageName","iternary","pricePerPerson","numberOfDays","personLimit","dayschedule","setDaySchedule","packageId","daywise","hotelName","spotName","vehicleName","isOpen","setIsOpen","fetchCarouselData","response","get","console","log","data","error","handleChange","event","target","value","fetchLocationName","getSpot","setSpotselect","handleChange2","dayIndex","prevHotel","fetchHotelName","hotels","setHotels","handleHotelChange","prevHotels","newHotels","getvehicle","setVehicle","handleVehicleNameChange","placeName","uncheckedDeptName","find","dept","locationName","id","hotelsForSpot","map","item","PostPackage","post","then","catch","handlePost","postData","push","handleNumDaysChange","parseInt","children","src","className","alt","fileName","_jsxFileName","lineNumber","columnNumber","onChange","label","type","min","onClick","_","_c","$RefreshReg$"],"sources":["D:/KaniniTrip/src/Component/AgentBooking/AgentBooking.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport gallery from '../../Assets/low-angle-shot-mesmerizing-starry-sky.jpg';\r\nimport { MDBInput } from 'mdb-react-ui-kit';\r\nimport axios from 'axios';\r\nimport './AgentBooking.css'\r\n\r\n\r\n\r\nconst AgentBooking = () => {\r\n\r\n    const [location, setLocation] = useState([]);\r\n    const [selectedValue, setSelectedValue] = useState('');\r\n    const [iselectedValue, setISelectedValue] = useState('');\r\n    const [iselectedValue2, setISelectedValue2] = useState([]);\r\n    const [numDays, setNumDays] = useState(1); // Initialize with 1 day\r\n    const [spot, setSpot] = useState([]);\r\n    const [hotel, setHotel] = useState([]);\r\n    const [selectedSpots, setSelectedSpots] = useState(Array.from({ length: numDays }, () => ''));\r\n    const [selectedHotels, setSelectedHotels] = useState(Array.from({ length: numDays }, () => ''));\r\n    const [selectedHotel, setSelectedHotel] = useState('');\r\n    const [selectedPack, setSelectedPack] = useState({\r\n        locationId: 1,\r\n        packageName: '',\r\n        ImageName: null,\r\n        iternary: '',\r\n        pricePerPerson: '',\r\n        numberOfDays: '',\r\n        personLimit: true,\r\n    });\r\n    const [dayschedule, setDaySchedule] = useState({ packageId: 0, daywise: 0, hotelName: '', spotName: '', vehicleName: '' });\r\n\r\n    const [isOpen, setIsOpen] = useState(false)\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchCarouselData = async () => {\r\n            try {\r\n                const response = await axios.get('https://localhost:7026/UserSide/DisplayingAllLocations');\r\n                console.log(response.data);\r\n                setLocation(response.data); // Assuming the API response contains the data for carousel items\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        };\r\n\r\n        fetchCarouselData();\r\n    }, []);\r\n\r\n    const handleChange = (event) => {\r\n        console.log(event.target.value);\r\n        setISelectedValue(event.target.value)\r\n        fetchLocationName(event.target.value);\r\n    };\r\n    // const handleChange2 = (event) => {\r\n    //     console.log(event.target.value);\r\n    //     setISelectedValue2(event.target.value)\r\n    //     fetchHotelName(event.target.value);\r\n    // };\r\n    const [getSpot, setSpotselect] = useState('')\r\n    const handleChange2 = async (event, dayIndex) => {\r\n        const spotName = event.target.value;\r\n        // setSelectedSpots((prevSpots) => {\r\n        //     const newSpots = [...prevSpots];\r\n        //     newSpots[dayIndex] = spotName;\r\n        //     return newSpots;\r\n        // });\r\n        // setDaySchedule((prevSchedule) => {\r\n        //     const updatedSchedule = [...prevSchedule];\r\n        //     updatedSchedule[dayIndex].spotName = spotName;\r\n        //     return updatedSchedule;\r\n        //   });\r\n        setSpotselect((prevHotel) => [...prevHotel, ...event.target.value])\r\n        fetchHotelName(spotName, dayIndex); // Pass the dayIndex to identify the selected day\r\n    };\r\nconst [hotels,setHotels]=useState('')\r\n    const handleHotelChange = (event, dayIndex) => {\r\n        const hotelName = event.target.value;\r\n        setSelectedHotels((prevHotels) => {\r\n            const newHotels = [...prevHotels];\r\n            newHotels[dayIndex] = hotelName;\r\n            return newHotels;\r\n        });\r\nsetHotels()\r\n    };\r\n    const [getvehicle, setVehicle] = useState('')\r\n    const handleVehicleNameChange = (event, dayIndex) => {\r\n        const vehicleName = event.target.value;\r\n        // setDaySchedule((prevSchedule) => {\r\n        //   const updatedSchedule = [...prevSchedule];\r\n        //   updatedSchedule[dayIndex].vehicleName = vehicleName;\r\n        //   return updatedSchedule;\r\n        // });\r\n        setVehicle((prevHotel) => [...prevHotel, ...event.target.value])\r\n    };\r\n\r\n    useEffect(() => {\r\n        setSelectedHotel(''); // Reset selected hotel whenever the selected spot changes\r\n    }, [selectedSpots]);\r\n\r\n    const fetchLocationName = async (placeName) => {\r\n\r\n        // GetSpots in that Locations\r\n        try {\r\n            const uncheckedDeptName = location.find((dept) => dept.locationName === placeName).locationId;\r\n            console.log(uncheckedDeptName);\r\n            const response = await axios.get(`https://localhost:7026/AgentSide/GetSpotNameById?locationId=${uncheckedDeptName}`);\r\n            console.log(response.data);\r\n            setSpot(response.data); // Assuming the API response contains the data for carousel items\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    const fetchHotelName = async (spotName, dayIndex) => {\r\n        try {\r\n            const uncheckedDeptName = spot.find((dept) => dept.spotName === spotName).id;\r\n            console.log(uncheckedDeptName);\r\n            const response = await axios.get(`https://localhost:7026/AgentSide/GetHotelNameBySpotId?locationId=${uncheckedDeptName}`);\r\n            console.log(response.data);\r\n            // Get the array of hotels for the selected spot\r\n            const hotelsForSpot = response.data.map((item) => item.hotelName);\r\n\r\n            setSelectedHotels((prevHotels) => {\r\n                const newHotels = [...prevHotels];\r\n                newHotels[dayIndex] = hotelsForSpot[0] || ''; // Set the selected hotel for the specific day to the first hotel for the spot\r\n                return newHotels;\r\n            });\r\n            // Update the hotel state with the fetched hotels\r\n            setHotel((prevHotel) => [...prevHotel, ...response.data]);\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    const PostPackage = () => {\r\n        // Do something with the selectedPack data, e.g., send it to the server\r\n        console.log(selectedPack);\r\n        axios.post('https://localhost:7026/UserSide/BookingAPackage', selectedPack)\r\n            .then((response) => {\r\n                // Handle successful response from the server\r\n                console.log('Data successfully sent to the server:', response.data);\r\n            })\r\n            .catch((error) => {\r\n                // Handle error\r\n                console.error('Error while sending data to the server:', error);\r\n            });\r\n        setIsOpen(true)\r\n    }\r\n\r\n    const handlePost = async () => {\r\n        try {\r\n            const postData = {}\r\n            // Create an array to hold the POST data for each day\r\n            // const postData = [];\r\n            // for (let i = 0; i < numDays; i++) {\r\n            //     const {  spotName } = dayschedule[i];\r\n            try {\r\n                const response = await axios.get(`https://localhost:7026/UserSide/DisplayingAllLocations`);\r\n                console.log(response.data.length); // Assuming the API response contains the data for carousel items\r\n\r\n                // Add the data for each day to the postData array\r\n\r\n                postData.push({\r\n                    packageId: response.data.length,\r\n                    daywise: 1, // Set the daywise value (daywise = i + 1)\r\n                    hotelName: hotel,\r\n                    spotName:getSpot,\r\n                    vehicleName: getvehicle,\r\n                });\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n\r\n            console.log(postData);\r\n\r\n            // Send the POST request with the postData array\r\n            const response = await axios.post('https://localhost:7026/AgentSide/GetHotelNameBySpotId', postData)\r\n                .then((response) => {\r\n                    // Handle successful response from the server\r\n                    console.log('Data successfully sent to the server:', response.data);\r\n                })\r\n                .catch((error) => {\r\n                    // Handle error\r\n                    console.error('Error while sending data to the server:', error);\r\n                });\r\n        }\r\n        catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    // const [numDays, setNumDays] = useState(1); // Initialize with 1 day\r\n\r\n    const handleNumDaysChange = (event) => {\r\n        setNumDays(parseInt(event.target.value, 10));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img src={gallery} className='gallery-img' alt='Gallery' />\r\n            </div>\r\n            <div className='book-head'>ADD PACKAGE</div>\r\n\r\n            <div className='container mt-5'>\r\n                <div className='booknow-box'>\r\n                    <h3 className='mt-3 text-center' >ADDING PACKAGE</h3>\r\n                    <select className='increase-width mt-5 mb-3' value={iselectedValue} onChange={handleChange}>\r\n                        <option value=\"\">Select a Location</option>\r\n                        {location.map((item) => (\r\n                            <option key={item.id} value={item.locationName}>\r\n                                {item.locationName}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                    <div>\r\n                        <MDBInput className='mb-3' label='Package Name' id='typeText' type='text' />\r\n                    </div>\r\n\r\n                    <div>\r\n                        <MDBInput className='mb-3' label='' id='typeText' type='file' />\r\n                    </div>\r\n                    <div>\r\n                        <MDBInput className='mb-3' label='Iternary' id='typeText' type='text' />\r\n                    </div>\r\n                    <div>\r\n                        <MDBInput className='mb-3' label='Number of Days'\r\n                            value={numDays}\r\n                            min=\"1\"\r\n                            onChange={handleNumDaysChange} id='typeText' type='number' />\r\n                    </div>\r\n                    <div>\r\n                        <MDBInput className='mb-3' label='Price Per Person' id='typeText' type='number' />\r\n                    </div>\r\n                    <div>\r\n                        <MDBInput className='mb-3' label='Person Limit' id='typeText' type='number' />\r\n                    </div>\r\n\r\n                    {/* Submit button */}\r\n                    <button className='btn btn-primary mt-3 upload-cancel' onClick={PostPackage}>Submit</button>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Second Box */}\r\n            {isOpen && (\r\n                <div className='container mt-5'>\r\n                    <div className='booknow-box'>\r\n                        <h3 className='mt-3 text-center'>ADDING DAY SCHEDULES</h3>\r\n                        {/* BELOW FORM SHOULD REPEAT BASED ON NUMBER OF DAYS CHOSEN */}\r\n                        {Array.from({ length: numDays }).map((_, dayIndex) => (\r\n                            <div key={dayIndex}>\r\n                                <h3 className='mt-5 mb-3'>Day: {dayIndex + 1}</h3>\r\n                                <select\r\n                                    className='increase-width mb-3'\r\n                                    value={selectedSpots[dayIndex]}\r\n                                    onChange={(event) => handleChange2(event, dayIndex)}\r\n                                >\r\n                                    <option value=''>Select a Spot Name</option>\r\n                                    {spot.map((item) => (\r\n                                        <option key={item.id} value={item.spotName}>\r\n                                            {item.spotName}\r\n                                        </option>\r\n                                    ))}\r\n                                </select>\r\n\r\n                                <div>\r\n                                    <select\r\n                                        className='increase-width mb-3'\r\n                                        value={selectedHotels[dayIndex]}\r\n                                        onChange={(event) => handleHotelChange(event, dayIndex)}\r\n                                    >\r\n                                        <option value=''>Select a Hotel</option>\r\n                                        {hotel.map((item) => (\r\n                                            <option key={item.id} value={item.hotelName}>\r\n                                                {item.hotelName}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <MDBInput className='mb-3' label='Vehicle to Provide' id='typeText' type='text' onChange={(event) => handleVehicleNameChange(event, dayIndex)} />\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                        {/* Submit button */}\r\n                        <button className='btn btn-primary mt-3 upload-cancel' onClick={handlePost}>Submit</button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default AgentBooking\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}