{"ast":null,"code":"var _jsxFileName = \"D:\\\\KaniniTrip\\\\src\\\\Component\\\\RegisterPage\\\\AgencyRegister\\\\AgencyRegister.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './AgencyRegister.css';\nimport LoginImage from '../../../Assets/5805585.jpg';\nimport { MDBIcon } from 'mdb-react-ui-kit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AgencyRegister = () => {\n  _s();\n  const [userDTO, setUserDTO] = useState({\n    firstName: '',\n    lastName: '',\n    username: '',\n    email: '',\n    password: '',\n    role: 'User'\n  });\n  const [success, setSuccess] = useState(false);\n  const [errors, setErrors] = useState({\n    firstName: '',\n    email: '',\n    phoneNumber: '',\n    password: ''\n  });\n  const validateEmail = email => {\n    return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\n  };\n  const validatePassword = password => {\n    // Password regex pattern: At least one uppercase, one lowercase, one number, and one special character\n    const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\n    return passwordRegex.test(password);\n  };\n  const validatePhoneNumber = phoneNumber => {\n    return /^\\d{0,14}$/.test(phoneNumber);\n  };\n  const register = () => {\n    const newErrors = {\n      firstName: userDTO.firstName.trim() === '' ? 'First name is required' : userDTO.firstName.trim().length < 5 || userDTO.firstName.trim().length > 20 ? 'First name must be between 5 and 20 characters' : '',\n      email: userDTO.email.trim() === '' ? 'Email is required' : validateEmail(userDTO.email) ? '' : 'Invalid email',\n      phoneNumber: userDTO.username.trim() === '' ? 'Phone number is required' : !validatePhoneNumber(userDTO.username) ? 'Invalid phone number (only numbers allowed, max 14 digits)' : '',\n      password: userDTO.password.trim() === '' ? 'Password is required' : validatePassword(userDTO.password) ? '' : 'Password must contain at least one uppercase, one lowercase, one number, and one special character'\n    };\n    setErrors(newErrors);\n    if (Object.values(newErrors).every(error => error === '')) {\n      console.log(userDTO);\n      fetch('https://localhost:7190/api/Owner/register', {\n        method: 'POST',\n        headers: {\n          accept: 'text/plain',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(userDTO)\n      }).then(async data => {\n        if (data.status === 200) {\n          var user = await data.json();\n          setSuccess(true);\n          toast.success('Registered successfully!');\n        }\n      }).catch(error => {\n        console.error('Error:', error);\n        toast.error('Registration failed!');\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bgImage\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n_s(AgencyRegister, \"rQrAlpc09C4QtEFDG3Mvd33/0Jg=\");\n_c = AgencyRegister;\nexport default AgencyRegister;\nvar _c;\n$RefreshReg$(_c, \"AgencyRegister\");","map":{"version":3,"names":["React","useState","toast","LoginImage","MDBIcon","jsxDEV","_jsxDEV","AgencyRegister","_s","userDTO","setUserDTO","firstName","lastName","username","email","password","role","success","setSuccess","errors","setErrors","phoneNumber","validateEmail","test","validatePassword","passwordRegex","validatePhoneNumber","register","newErrors","trim","length","Object","values","every","error","console","log","fetch","method","headers","accept","body","JSON","stringify","then","data","status","user","json","catch","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/KaniniTrip/src/Component/RegisterPage/AgencyRegister/AgencyRegister.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './AgencyRegister.css';\r\nimport LoginImage from '../../../Assets/5805585.jpg';\r\nimport { MDBIcon } from 'mdb-react-ui-kit';\r\n\r\n\r\nconst AgencyRegister = () => {\r\n  const [userDTO, setUserDTO] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    username: '',\r\n    email: '',\r\n    password: '',\r\n    role: 'User',\r\n  });\r\n  const [success, setSuccess] = useState(false);\r\n  const [errors, setErrors] = useState({\r\n    firstName: '',\r\n    email: '',\r\n    phoneNumber: '',\r\n    password: '',\r\n  });\r\n\r\n  const validateEmail = (email) => {\r\n    return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\r\n  };\r\n\r\n  const validatePassword = (password) => {\r\n    // Password regex pattern: At least one uppercase, one lowercase, one number, and one special character\r\n    const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\r\n    return passwordRegex.test(password);\r\n  };\r\n\r\n  const validatePhoneNumber = (phoneNumber) => {\r\n    return /^\\d{0,14}$/.test(phoneNumber);\r\n  };\r\n\r\n  const register = () => {\r\n    const newErrors = {\r\n      firstName:\r\n        userDTO.firstName.trim() === ''\r\n          ? 'First name is required'\r\n          : userDTO.firstName.trim().length < 5 || userDTO.firstName.trim().length > 20\r\n            ? 'First name must be between 5 and 20 characters'\r\n            : '',\r\n      email: userDTO.email.trim() === '' ? 'Email is required' : validateEmail(userDTO.email) ? '' : 'Invalid email',\r\n      phoneNumber:\r\n        userDTO.username.trim() === ''\r\n          ? 'Phone number is required'\r\n          : !validatePhoneNumber(userDTO.username)\r\n            ? 'Invalid phone number (only numbers allowed, max 14 digits)'\r\n            : '',\r\n      password:\r\n        userDTO.password.trim() === ''\r\n          ? 'Password is required'\r\n          : validatePassword(userDTO.password)\r\n            ? ''\r\n            : 'Password must contain at least one uppercase, one lowercase, one number, and one special character',\r\n    };\r\n\r\n    setErrors(newErrors);\r\n\r\n    if (Object.values(newErrors).every((error) => error === '')) {\r\n      console.log(userDTO);\r\n      fetch('https://localhost:7190/api/Owner/register', {\r\n        method: 'POST',\r\n        headers: {\r\n          accept: 'text/plain',\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(userDTO),\r\n      })\r\n        .then(async (data) => {\r\n          if (data.status === 200) {\r\n            var user = await data.json();\r\n            setSuccess(true);\r\n            toast.success('Registered successfully!');\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error:', error);\r\n          toast.error('Registration failed!');\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"bgImage\">\r\n\r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nexport default AgencyRegister;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}