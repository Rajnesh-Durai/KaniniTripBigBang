{"ast":null,"code":"var _jsxFileName = \"D:\\\\KaniniTrip\\\\src\\\\Component\\\\LoginPage\\\\LoginPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './LoginPage.css';\nimport LoginImage from '../../Assets/11235651_10862.jpg';\nimport axios from 'axios';\nimport { MDBIcon } from 'mdb-react-ui-kit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [userDTO, setUserDTO] = useState({\n    username: '',\n    password: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [isValid, setIsValid] = useState(false);\n  const [maskedPassword, setMaskedPassword] = useState('');\n  // Handle password change and mask it with asterisks\n  const handlePasswordChange = event => {\n    let value = event.target.value;\n\n    // Check if data is being pasted\n    if (event.clipboardData && event.clipboardData.getData) {\n      value = event.clipboardData.getData('Text');\n    }\n    setPassword(value);\n    setIsValid(validatePassword(value));\n  };\n  const validatePassword = value => {\n    const minLength = 8;\n    let isValid = true;\n    const newErrors = {};\n    if (!value) {\n      newErrors.password = 'Password is required';\n      isValid = false;\n    } else if (value.length < minLength) {\n      newErrors.password = `Password must be at least ${minLength} characters long`;\n      isValid = false;\n    }\n    setErrors(newErrors);\n    return isValid;\n  };\n  const maskPassword = value => {\n    return \"*\".repeat(value.length);\n  };\n  // Validate email and password\n  const validateForm = () => {\n    const newErrors = {};\n    let isValid = true;\n    //Password validation\n    if (!password) {\n      newErrors.password = 'Password is required';\n      isValid = false;\n    }\n    setErrors(newErrors);\n    return isValid;\n  };\n  // Handle form submission\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (validateForm()) {\n      // Form submission logic goes here\n    }\n  };\n  const logindata = async () => {\n    console.log(userDTO);\n\n    // fetch(`https://localhost:7190/api/Owner/authenticate`,{\n    //   method:\"POST\",\n    //   headers:{\n    //     \"Content-Type\":\"application/json\",\n    //   },\n    //   body:JSON.stringify(loginuser),\n    // })\n    // .then(response => {\n    //   if (response ===200) {\n    //     console.log(\"Login Successfully\"); \n    //   }\n    //   return response.json();\n    // })\n    // .catch(error=>{\n    //   console.error(\"login error in:\",error);\n    // })\n    try {\n      const response = await axios.post('https://localhost:7026/api/Auth/LogIN', userDTO);\n      console.log('Response:', response.data); // You can handle the response data as needed\n      // Perform any actions you need with the response data here\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MDBSpinner, {\n      className: \"mx-2\",\n      color: \"info\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"visually-hidden\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 1\n    }, this)\n  }, void 0, false);\n};\n_s(LoginPage, \"O9rlPD8GyORnAm9Ot6jUiGvbE1Q=\");\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","toast","LoginImage","axios","MDBIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","LoginPage","_s","userDTO","setUserDTO","username","password","errors","setErrors","isValid","setIsValid","maskedPassword","setMaskedPassword","handlePasswordChange","event","value","target","clipboardData","getData","setPassword","validatePassword","minLength","newErrors","length","maskPassword","repeat","validateForm","handleSubmit","e","preventDefault","logindata","console","log","response","post","data","error","children","MDBSpinner","className","color","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/KaniniTrip/src/Component/LoginPage/LoginPage.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './LoginPage.css';\r\nimport LoginImage from '../../Assets/11235651_10862.jpg';\r\nimport axios from 'axios';\r\nimport { MDBIcon } from 'mdb-react-ui-kit';\r\n\r\n\r\nconst LoginPage = () => {\r\n\r\n    const [userDTO, setUserDTO] = useState({     \r\n        username: '',\r\n        password: ''\r\n    });\r\n    const [errors, setErrors] = useState({});\r\n    const [isValid, setIsValid] = useState(false);\r\n    const [maskedPassword, setMaskedPassword] = useState('');\r\n    // Handle password change and mask it with asterisks\r\n    const handlePasswordChange = (event) => {\r\n        let value = event.target.value;\r\n\r\n\r\n        // Check if data is being pasted\r\n        if (event.clipboardData && event.clipboardData.getData) {\r\n            value = event.clipboardData.getData('Text');\r\n\r\n        }\r\n\r\n        setPassword(value);\r\n\r\n        setIsValid(validatePassword(value));\r\n    };\r\n\r\n    const validatePassword = (value) => {\r\n        const minLength = 8;\r\n        let isValid = true;\r\n        const newErrors = {};\r\n\r\n        if (!value) {\r\n            newErrors.password = 'Password is required';\r\n            isValid = false;\r\n        } else if (value.length < minLength) {\r\n            newErrors.password = `Password must be at least ${minLength} characters long`;\r\n            isValid = false;\r\n        }\r\n        setErrors(newErrors);\r\n        return isValid;\r\n    };\r\n\r\n    const maskPassword = (value) => {\r\n        return \"*\".repeat(value.length);\r\n    };\r\n    // Validate email and password\r\n    const validateForm = () => {\r\n        const newErrors = {};\r\n        let isValid = true;\r\n        //Password validation\r\n        if (!password) {\r\n            newErrors.password = 'Password is required';\r\n            isValid = false;\r\n        }\r\n        setErrors(newErrors);\r\n        return isValid;\r\n    };\r\n    // Handle form submission\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (validateForm()) {\r\n            // Form submission logic goes here\r\n        }\r\n    };\r\n    const logindata = async () => {\r\n \r\n\r\n        console.log(userDTO)\r\n\r\n        // fetch(`https://localhost:7190/api/Owner/authenticate`,{\r\n        //   method:\"POST\",\r\n        //   headers:{\r\n        //     \"Content-Type\":\"application/json\",\r\n        //   },\r\n        //   body:JSON.stringify(loginuser),\r\n        // })\r\n        // .then(response => {\r\n        //   if (response ===200) {\r\n        //     console.log(\"Login Successfully\"); \r\n        //   }\r\n        //   return response.json();\r\n        // })\r\n        // .catch(error=>{\r\n        //   console.error(\"login error in:\",error);\r\n        // })\r\n        try {\r\n            const response = await axios.post('https://localhost:7026/api/Auth/LogIN', userDTO);\r\n            console.log('Response:', response.data); // You can handle the response data as needed\r\n            // Perform any actions you need with the response data here\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n\r\n<MDBSpinner className='mx-2' color='info'>\r\n        <span className='visually-hidden'>Loading...</span>\r\n      </MDBSpinner>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default LoginPage\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,KAAK,QAAQ,gBAAgB;AACtC,OAAO,uCAAuC;AAC9C,OAAO,iBAAiB;AACxB,OAAOC,UAAU,MAAM,iCAAiC;AACxD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAG3C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEpB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC;IACnCa,QAAQ,EAAE,EAAE;IACZC,QAAQ,EAAE;EACd,CAAC,CAAC;EACF,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxC,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACmB,cAAc,EAAEC,iBAAiB,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EACxD;EACA,MAAMqB,oBAAoB,GAAIC,KAAK,IAAK;IACpC,IAAIC,KAAK,GAAGD,KAAK,CAACE,MAAM,CAACD,KAAK;;IAG9B;IACA,IAAID,KAAK,CAACG,aAAa,IAAIH,KAAK,CAACG,aAAa,CAACC,OAAO,EAAE;MACpDH,KAAK,GAAGD,KAAK,CAACG,aAAa,CAACC,OAAO,CAAC,MAAM,CAAC;IAE/C;IAEAC,WAAW,CAACJ,KAAK,CAAC;IAElBL,UAAU,CAACU,gBAAgB,CAACL,KAAK,CAAC,CAAC;EACvC,CAAC;EAED,MAAMK,gBAAgB,GAAIL,KAAK,IAAK;IAChC,MAAMM,SAAS,GAAG,CAAC;IACnB,IAAIZ,OAAO,GAAG,IAAI;IAClB,MAAMa,SAAS,GAAG,CAAC,CAAC;IAEpB,IAAI,CAACP,KAAK,EAAE;MACRO,SAAS,CAAChB,QAAQ,GAAG,sBAAsB;MAC3CG,OAAO,GAAG,KAAK;IACnB,CAAC,MAAM,IAAIM,KAAK,CAACQ,MAAM,GAAGF,SAAS,EAAE;MACjCC,SAAS,CAAChB,QAAQ,GAAI,6BAA4Be,SAAU,kBAAiB;MAC7EZ,OAAO,GAAG,KAAK;IACnB;IACAD,SAAS,CAACc,SAAS,CAAC;IACpB,OAAOb,OAAO;EAClB,CAAC;EAED,MAAMe,YAAY,GAAIT,KAAK,IAAK;IAC5B,OAAO,GAAG,CAACU,MAAM,CAACV,KAAK,CAACQ,MAAM,CAAC;EACnC,CAAC;EACD;EACA,MAAMG,YAAY,GAAGA,CAAA,KAAM;IACvB,MAAMJ,SAAS,GAAG,CAAC,CAAC;IACpB,IAAIb,OAAO,GAAG,IAAI;IAClB;IACA,IAAI,CAACH,QAAQ,EAAE;MACXgB,SAAS,CAAChB,QAAQ,GAAG,sBAAsB;MAC3CG,OAAO,GAAG,KAAK;IACnB;IACAD,SAAS,CAACc,SAAS,CAAC;IACpB,OAAOb,OAAO;EAClB,CAAC;EACD;EACA,MAAMkB,YAAY,GAAIC,CAAC,IAAK;IACxBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAIH,YAAY,CAAC,CAAC,EAAE;MAChB;IAAA;EAER,CAAC;EACD,MAAMI,SAAS,GAAG,MAAAA,CAAA,KAAY;IAG1BC,OAAO,CAACC,GAAG,CAAC7B,OAAO,CAAC;;IAEpB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI;MACA,MAAM8B,QAAQ,GAAG,MAAMtC,KAAK,CAACuC,IAAI,CAAC,uCAAuC,EAAE/B,OAAO,CAAC;MACnF4B,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEC,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC;MACzC;IACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZL,OAAO,CAACK,KAAK,CAACA,KAAK,CAAC;IACxB;EACJ,CAAC;EAED,oBACItC,OAAA,CAAAE,SAAA;IAAAqC,QAAA,eAERvC,OAAA,CAACwC,UAAU;MAACC,SAAS,EAAC,MAAM;MAACC,KAAK,EAAC,MAAM;MAAAH,QAAA,eACjCvC,OAAA;QAAMyC,SAAS,EAAC,iBAAiB;QAAAF,QAAA,EAAC;MAAU;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC;EAAC,gBACT,CAAC;AAGX,CAAC;AAAA1C,EAAA,CAtGKD,SAAS;AAAA4C,EAAA,GAAT5C,SAAS;AAwGf,eAAeA,SAAS;AAAA,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}