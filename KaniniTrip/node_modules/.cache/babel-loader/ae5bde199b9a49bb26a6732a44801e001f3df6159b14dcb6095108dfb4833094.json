{"ast":null,"code":"var _jsxFileName = \"D:\\\\KaniniTrip\\\\src\\\\Component\\\\HomePage\\\\WhoComponent\\\\WhoComponent.jsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Section = styled.div`\nheight:100vh;\nbackground-color:red;\nscroll-snap-align:center;\n`;\n_c = Section;\nconst ParallaxContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  overflow-y: auto; /* Allow scrolling for the parallax effect */\n`;\n_c2 = ParallaxContainer;\nconst ParallaxImage = styled.img`\n  height: 100vh; /* Set the height of each image to 100vh */\n  object-fit: cover; /* Adjust the image sizing to cover the entire container */\n  transform: translateY(${({\n  offset\n}) => offset}px); /* Apply the parallax effect */\n  transition: transform 0.3s ease-out; /* Add a smooth transition effect */\n`;\n_c3 = ParallaxImage;\nconst WhoComponent = () => {\n  const imageFiles = ['image1.jpg', 'image2.jpg', 'image3.jpg', 'image4.jpg']; // Replace with your image filenames\n\n  // Set the parallax offsets for each image\n  const parallaxOffsets = [0, -50, -100, -150]; // You can adjust these values to control the parallax effect\n\n  return /*#__PURE__*/_jsxDEV(Section, {\n    children: /*#__PURE__*/_jsxDEV(ParallaxContainer, {\n      children: imageFiles.map((imageFile, index) => /*#__PURE__*/_jsxDEV(ParallaxImage, {\n        src: require(`../../../Assets/${imageFile}`).default // Use require to load images from assets folder\n        ,\n        offset: parallaxOffsets[index]\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_c4 = WhoComponent;\nexport default WhoComponent;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Section\");\n$RefreshReg$(_c2, \"ParallaxContainer\");\n$RefreshReg$(_c3, \"ParallaxImage\");\n$RefreshReg$(_c4, \"WhoComponent\");","map":{"version":3,"names":["React","styled","jsxDEV","_jsxDEV","Section","div","_c","ParallaxContainer","_c2","ParallaxImage","img","offset","_c3","WhoComponent","imageFiles","parallaxOffsets","children","map","imageFile","index","src","require","default","fileName","_jsxFileName","lineNumber","columnNumber","_c4","$RefreshReg$"],"sources":["D:/KaniniTrip/src/Component/HomePage/WhoComponent/WhoComponent.jsx"],"sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components';\r\n\r\nconst Section=styled.div`\r\nheight:100vh;\r\nbackground-color:red;\r\nscroll-snap-align:center;\r\n`;\r\n\r\n\r\nconst ParallaxContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100vh;\r\n  overflow-y: auto; /* Allow scrolling for the parallax effect */\r\n`;\r\n\r\nconst ParallaxImage = styled.img`\r\n  height: 100vh; /* Set the height of each image to 100vh */\r\n  object-fit: cover; /* Adjust the image sizing to cover the entire container */\r\n  transform: translateY(${({ offset }) => offset}px); /* Apply the parallax effect */\r\n  transition: transform 0.3s ease-out; /* Add a smooth transition effect */\r\n`;\r\n\r\nconst WhoComponent = () => {\r\n\r\n  const imageFiles = ['image1.jpg', 'image2.jpg', 'image3.jpg', 'image4.jpg']; // Replace with your image filenames\r\n\r\n  // Set the parallax offsets for each image\r\n  const parallaxOffsets = [0, -50, -100, -150]; // You can adjust these values to control the parallax effect\r\n\r\n  return (\r\n    <Section>\r\n          <ParallaxContainer>\r\n          {imageFiles.map((imageFile, index) => (\r\n        <ParallaxImage\r\n          key={index}\r\n          src={require(`../../../Assets/${imageFile}`).default} // Use require to load images from assets folder\r\n          offset={parallaxOffsets[index]}\r\n        />\r\n      ))}\r\n    </ParallaxContainer>\r\n    </Section>\r\n  )\r\n}\r\n\r\nexport default WhoComponent\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,OAAO,GAACH,MAAM,CAACI,GAAI;AACzB;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAJIF,OAAO;AAOb,MAAMG,iBAAiB,GAAGN,MAAM,CAACI,GAAI;AACrC;AACA;AACA;AACA;AACA,CAAC;AAACG,GAAA,GALID,iBAAiB;AAOvB,MAAME,aAAa,GAAGR,MAAM,CAACS,GAAI;AACjC;AACA;AACA,0BAA0B,CAAC;EAAEC;AAAO,CAAC,KAAKA,MAAO;AACjD;AACA,CAAC;AAACC,GAAA,GALIH,aAAa;AAOnB,MAAMI,YAAY,GAAGA,CAAA,KAAM;EAEzB,MAAMC,UAAU,GAAG,CAAC,YAAY,EAAE,YAAY,EAAE,YAAY,EAAE,YAAY,CAAC,CAAC,CAAC;;EAE7E;EACA,MAAMC,eAAe,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;;EAE9C,oBACEZ,OAAA,CAACC,OAAO;IAAAY,QAAA,eACFb,OAAA,CAACI,iBAAiB;MAAAS,QAAA,EACjBF,UAAU,CAACG,GAAG,CAAC,CAACC,SAAS,EAAEC,KAAK,kBACnChB,OAAA,CAACM,aAAa;QAEZW,GAAG,EAAEC,OAAO,CAAE,mBAAkBH,SAAU,EAAC,CAAC,CAACI,OAAQ,CAAC;QAAA;QACtDX,MAAM,EAAEI,eAAe,CAACI,KAAK;MAAE,GAF1BA,KAAK;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGX,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACe;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AAEd,CAAC;AAAAC,GAAA,GApBKd,YAAY;AAsBlB,eAAeA,YAAY;AAAA,IAAAP,EAAA,EAAAE,GAAA,EAAAI,GAAA,EAAAe,GAAA;AAAAC,YAAA,CAAAtB,EAAA;AAAAsB,YAAA,CAAApB,GAAA;AAAAoB,YAAA,CAAAhB,GAAA;AAAAgB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}